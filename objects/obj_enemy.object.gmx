<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
grav = 0.5;
hsp = 0;
vsp = 0;
max_vsp = 10;
movespeed = 2;

walking = false;
falling = false;
hurting = false;
dying = false;
grounded = false;
facing_right = true;

// choose starting direction
key_left = false;
key_right = false;
switch (irandom(4))
{
    case 0:
    case 1:
        key_left = true;
        break;
    
    case 2:
    case 3:
        key_right = true;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update

// is object standing on a wall
grounded = place_meeting(x, y + 1, obj_wall);

// reset walking
hsp = 0;
walking = false;
    
// apply gravity
if (vsp &lt; max_vsp)
{
    vsp += grav;
}


/**
 * Is Moving
 */
if ( ! dying &amp;&amp; ! hurting)
{    
    if (key_left)
    {
        hsp = -movespeed;
        walking = true;
    }
    else if (key_right)
    {
        hsp = movespeed;
        walking = true;
    }
}


/**
 * Check for Collisions
 */

// If Horizontal Collision
if (place_meeting(x + hsp, y, obj_wall))
{
    while ( ! place_meeting(x + sign(hsp), y, obj_wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
    
    key_left = !key_left;
    key_right = !key_right;
}
x += hsp;

// If Vertical Collision
if (place_meeting(x, y + vsp, obj_wall))
{
    while ( ! place_meeting(x, y + sign(vsp), obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;


/**
 * Check for the Edge of Platforms
 */
if (grounded &amp;&amp; walking)
{
    // if moving left and no platform 
    if (key_left &amp;&amp; ! position_meeting(bbox_left - 1, bbox_bottom + 1, obj_wall))
    {
        key_left = !key_left;
        key_right = !key_right;
    }
    // else, if moving right and no platform
    else if (key_right &amp;&amp; ! position_meeting(bbox_right + 1, bbox_bottom + 1, obj_wall))
    {
        key_left = !key_left;
        key_right = !key_right;
    }
}


/**
 * Update Object Sprite
 */

// update the direction the object is facing
if (facing_right &amp;&amp; key_left)
{
    image_xscale = -1;
    facing_right = false;
}
else if ( ! facing_right &amp;&amp; key_right)
{
    image_xscale = 1;
    facing_right = true;
}

// update the object's sprite
//sprite_index = spr_player;
//image_speed = 0;
//image_index = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
